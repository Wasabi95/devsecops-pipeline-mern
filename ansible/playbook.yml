---
- name: Install DevOps tools stack
  hosts: devops_tools
  become: true
  tasks:
    # Jenkins Installation
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Jenkins dependencies
      apt:
        name:
          - fontconfig
          - openjdk-17-jre
          - wget
          - gnupg
        state: present

    - name: Create keyring directory
      file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Add Jenkins GPG key
      ansible.builtin.get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'

    - name: Add Jenkins repository
      copy:
        content: |
          deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/
        dest: /etc/apt/sources.list.d/jenkins.list
        mode: '0644'

    - name: Update apt cache for Jenkins
      apt:
        update_cache: yes

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present

    - name: Enable and start Jenkins service
      systemd:
        name: jenkins
        enabled: yes
        state: started

    # Security Tools
    - name: Install Trivy dependencies
      apt:
        name:
          - wget
          - apt-transport-https
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Trivy GPG key
      ansible.builtin.shell:
        cmd: "wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg"
      args:
        creates: /usr/share/keyrings/trivy.gpg

    - name: Add Trivy repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/trivy.list
        line: "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb {{ ansible_distribution_release }} main"
        create: yes

    - name: Install Trivy
      apt:
        name: trivy
        state: present
        update_cache: yes

    # Docker Setup
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Install Python3 pip and docker SDK for Python
      apt:
        name:
          - python3-pip
        state: present
        update_cache: yes
        
    - name: Install Docker Python SDK via pip3
      pip:
        name: docker
        executable: pip3    

    # Containerized Tools
    - name: Start SonarQube container
      community.docker.docker_container:
        name: sonarqube
        image: sonarqube:lts-community
        state: started
        restart_policy: unless-stopped
        ports:
          - "9000:9000"
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    - name: Start Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: unless-stopped
        ports:
          - "9090:9090"
        volumes:
          - prometheus_data:/prometheus

    - name: Start Grafana container
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: unless-stopped
        ports:
          - "3000:3000"
        volumes:
          - grafana_data:/var/lib/grafana
        env:
          GF_SECURITY_ADMIN_PASSWORD: "ChangeThisPassword123!"

    - name: Start OWASP ZAP container
      community.docker.docker_container:
        name: owasp-zap
        image: owasp/zap2docker-stable
        state: started
        restart_policy: unless-stopped
        ports:
          - "8081:8080"  # Use 8081 to avoid conflict with Jenkins
        command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=ChangeThisKey123

    # Final status message
    - name: Print installation summary
      debug:
        msg: |
          DevOps Tools Installation Complete!
          Access:
            - Jenkins:     http://{{ ansible_host }}:8080
            - SonarQube:   http://{{ ansible_host }}:9000
            - Prometheus:  http://{{ ansible_host }}:9090
            - Grafana:     http://{{ ansible_host }}:3000  (admin/ChangeThisPassword123!)
            - OWASP ZAP:   http://{{ ansible_host }}:8081  (API key: ChangeThisKey123)
          Security:
            - Trivy installed for vulnerability scanning