---
- name: Install DevOps and DevSecOps tools
  hosts: devops_tools
  become: true
  vars:
    tools_to_install:
      - docker
      - jenkins
      - sonarqube
      - trivy
      - zaproxy
      - helm
      - kubectl
      - terraform
      - checkov
  tasks:
    - name: Update apt cache and install base packages
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - curl
          - gnupg
          - software-properties-common
          - unzip
          - apt-transport-https
          - ca-certificates
        state: present

    # Docker Installation
    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: "'docker' in tools_to_install"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: "'docker' in tools_to_install"

    - name: Install Docker CE
      ansible.builtin.apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      when: "'docker' in tools_to_install"

    - name: Install Docker Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      when: "'docker' in tools_to_install"

    - name: Add current user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes
      when: "'docker' in tools_to_install"

    # Jenkins Installation
    - name: Get Jenkins GPG key
      ansible.builtin.get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'
      when: "'jenkins' in tools_to_install"

    - name: Add Jenkins repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
        state: present
      when: "'jenkins' in tools_to_install"

    - name: Install Jenkins and Java
      ansible.builtin.apt:
        name:
          - jenkins
          - openjdk-17-jre
        state: present
      when: "'jenkins' in tools_to_install"

    # SonarQube (Docker)
    - name: Create Docker volumes for SonarQube
      community.docker.docker_volume:
        name: "{{ item }}"
        state: present
      loop:
        - sonarqube_data
        - sonarqube_extensions
      when: "'sonarqube' in tools_to_install"

    - name: Run SonarQube container
      community.docker.docker_container:
        name: sonarqube
        image: sonarqube:lts-community
        ports:
          - "9000:9000"
        volumes:
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions
        environment:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
        restart_policy: always
      when: "'sonarqube' in tools_to_install"

    # Trivy - Safe installation method
    - name: Download Trivy
      ansible.builtin.get_url:
        url: "https://github.com/aquasecurity/trivy/releases/download/v0.49.1/trivy_{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/trivy
        mode: '0755'
      when: "'trivy' in tools_to_install"

    # OWASP ZAP (Docker)
    - name: Run OWASP ZAP container
      community.docker.docker_container:
        name: owasp-zap
        image: owasp/zap2docker-stable
        command: zap-webswing.sh
        ports:
          - "8080:8080"
        restart_policy: always
      when: "'zaproxy' in tools_to_install"

    # kubectl - Safe installation method
    - name: Install kubectl
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ lookup('url', 'https://dl.k8s.io/release/stable.txt') }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
      when: "'kubectl' in tools_to_install"

    # Helm - Safe installation method
    - name: Download Helm
      ansible.builtin.get_url:
        url: "https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz"
        dest: /tmp/helm.tar.gz
      when: "'helm' in tools_to_install"

    - name: Install Helm
      ansible.builtin.unarchive:
        src: /tmp/helm.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: /usr/local/bin/helm
      when: "'helm' in tools_to_install"

    # Terraform
    - name: Add HashiCorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present
      when: "'terraform' in tools_to_install"

    - name: Add HashiCorp repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present
      when: "'terraform' in tools_to_install"

    - name: Install Terraform
      ansible.builtin.apt:
        name: terraform
        state: present
      when: "'terraform' in tools_to_install"

    # Checkov
    - name: Install Python3 and pip
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
        state: present
      when: "'checkov' in tools_to_install"

    - name: Install Checkov
      ansible.builtin.pip:
        name: checkov
        executable: pip3
      when: "'checkov' in tools_to_install"

    # Start and enable services
    - name: Start and enable services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - docker
        - jenkins
      when: > 
        (item == 'docker' and 'docker' in tools_to_install) or 
        (item == 'jenkins' and 'jenkins' in tools_to_install)
    
    # Post-install configuration
    - name: Display Jenkins initial admin password
      ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false
      when: "'jenkins' in tools_to_install"
      
    - name: Show Jenkins admin password
      ansible.builtin.debug:
        msg: "Jenkins initial admin password: {{ jenkins_password.stdout }}"
      when: "'jenkins' in tools_to_install"
    
    # Increase virtual memory for SonarQube
    - name: Increase virtual memory limits
      ansible.builtin.sysctl:
        name: vm.max_map_count
        value: '262144'
        sysctl_set: yes
        state: present
        reload: yes
      when: "'sonarqube' in tools_to_install"
    
    # Ensure docker.sock is accessible
    - name: Ensure docker.sock permissions
      ansible.builtin.file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: '0660'
      when: "'docker' in tools_to_install"